services:
  api-e2e:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: url-shortener-api-e2e
    ports:
      - "3010:3000"
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=test
      - PORT=3000
      - LOG_LEVEL=debug
      - ENVIRONMENT=test
      - REDIS_HOST=redis-e2e
      - REDIS_PORT=6379
      - ETCD_HOSTS=http://etcd-e2e:2379
      - MONGODB_URI=mongodb://mongodb-e2e:27017/url-shortener
    command: npm run start:dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      redis-e2e:
        condition: service_healthy
      etcd-e2e:
        condition: service_healthy
      mongodb-e2e:
        condition: service_healthy

  redirector-e2e:
    build:
      context: ./redirector
      dockerfile: Dockerfile
    container_name: url-shortener-redirector-e2e
    ports:
      - "8080:8080"
    environment:
      - API_BASE_URL=http://api-e2e:3000 # API base URL
      - PORT=8080 # Service port
    depends_on:
      api-e2e:
        condition: service_healthy

  frontend-e2e:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: url-shortener-frontend-e2e
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_SHORTENER_API_URL=http://api-e2e:3000
      - VITE_SHORTENER_REDIRECTOR_URL=http://redirector-e2e:8080
    command: npm run dev -- --host
    restart: unless-stopped
    depends_on:
      api-e2e:
        condition: service_started

  mongodb-e2e:
    image: mongo:7
    container_name: url-shortener-mongodb-e2e
    ports:
      - "27018:27017"
    command: ["mongod", "--quiet", "--logpath", "/dev/null"]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 5s
    volumes:
      - db_mongo_data_shortener_v2_e2e:/data/db

  etcd-e2e:
    image: bitnami/etcd:3.5
    container_name: url-shortener-etcd-e2e
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd-e2e:2379
    ports:
      - "2379:2379"
      - "2380:2380"
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 5s

  redis-e2e:
    image: redis:7
    container_name: url-shortener-redis-e2e
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  url-shortener-cypress-e2e:
    image: cypress/included:12.17.0
    container_name: url-shortener-tests-e2e
    depends_on:
      mongodb-e2e:
        condition: service_healthy
      redis-e2e:
        condition: service_healthy
      etcd-e2e:
        condition: service_healthy
      api-e2e:
        condition: service_healthy
    working_dir: /e2e
    volumes:
      - ./tests/e2e:/e2e
    environment:
      - CYPRESS_BASE_URL=http://frontend-e2e:5173
      - CYPRESS_API_URL=http://api-e2e:3000
    command: cypress run

volumes:
  db_mongo_data_shortener_v2_e2e: